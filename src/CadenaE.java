
import javax.swing.JOptionPane;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author user
 */
public class CadenaE extends javax.swing.JFrame {

    /**
     * Creates new form JFrame
     */
    public CadenaE() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtCadena = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        JbComprobar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtCadena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCadenaActionPerformed(evt);
            }
        });

        jLabel1.setText("Frases");

        JbComprobar.setText("Comprobar");
        JbComprobar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbComprobarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(157, 157, 157))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(JbComprobar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(txtCadena, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(39, 39, 39)
                .addComponent(txtCadena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(JbComprobar)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JbComprobarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbComprobarActionPerformed
        // TODO add your handling code here:
        String cadena=txtCadena.getText();
        int contA=0,contE=0,contO=0,contI=0,contU=0,cont=0;
        StringBuilder cadenaModificada = new StringBuilder();
        for (int i = 0; i < cadena.length(); i++) {
            //comprueba si el espacio es vacio con el iswhitespace de la case
            if (Character.isWhitespace(cadena.charAt(i))) {
                cont ++;
            }
            char Cadena2 = (cadena.charAt(i));
            switch (Cadena2) {
        case 'a':
            contA++;
            //para modificar o construir cadenasde la clase StringBuilder
            cadenaModificada.append('@');
            break;
        case 'e':
            contE++;
            break;
        case 'i':
            contI++;
            break;
        case 'o':
            cadenaModificada.append('$');
            contO++;
            break;
        case 'u':
            contU++;
            break;
        }
       } 
        int suma=contA+contE+contI+contO+contU;
        JOptionPane.showMessageDialog(rootPane, "El numero de vocales A es: "+contA+"\n"
                + " El numero de vocales E es: "+contE+"\n"+
                " El numero de vocales I es: "+contI+"\n"+
                " El numero de vocales O es: "+contO+"\n"+
                " El numero de vocales U es: "+contU+"\n"+
                " El numero total de vocales es: "+suma );
        JOptionPane.showMessageDialog(rootPane, "El numero de espacios es: "+cont); 
        System.out.println("Resultado: "+cadenaModificada.toString());
        String cadenaInvertida = invertirCadena(cadena);
        System.out.println("Frase Original Invertida: " + cadenaInvertida);
       //que en cada espacio en blanco lo va a dividir 
        String[] palabras = cadena.split("\\s+");
        //devuelve el numero de la longitud del array
        int numeroDePalabras = palabras.length;
        System.out.println("NÃºmero de palabras resultantes: " + numeroDePalabras);
       //tomara el siguiente valor del siguiente elemento en el array de palabras sin la necesidad de utilizar un acumulador
        for (String palabra : palabras) {
            System.out.println(palabra);
        }
        } 
        private static String invertirCadena(String cadena) {
        StringBuilder invertir = new StringBuilder();
       //que recorre desde el ultimo  caracter hasta el primero 
        for (int i = cadena.length() - 1; i >= 0; i--) {
            invertir.append(cadena.charAt(i));
        }
        return invertir.toString();//se convierte en una cadena con el metodo    
    }//GEN-LAST:event_JbComprobarActionPerformed

    private void txtCadenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCadenaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCadenaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadenaE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadenaE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadenaE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadenaE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadenaE().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JbComprobar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField txtCadena;
    // End of variables declaration//GEN-END:variables
}
